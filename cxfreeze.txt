Usage: cxfreeze [options] [SCRIPT]

Freeze a Python script and all of its referenced modules to a base
executable which can then be distributed without requiring a Python
installation.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -O                    optimize generated bytecode as per PYTHONOPTIMIZE; use
                        -OO in order to remove doc strings
  -c, --compress        compress byte code in zip files
  -s, --silent          suppress all output except warnings and errors
  --base-name=NAME      file on which to base the target file; if the name of
                        the file is not an absolute file name, the
                        subdirectory bases (rooted in the directory in which
                        the freezer is found) will be searched for a file
                        matching the name
  --init-script=NAME    script which will be executed upon startup; if the
                        name of the file is not an absolute file name, the
                        subdirectory initscripts (rooted in the directory in
                        which the cx_Freeze package is found) will be searched
                        for a file matching the name
  --target-dir=DIR, --install-dir=DIR
                        the directory in which to place the target file and
                        any dependent files
  --target-name=NAME    the name of the file to create instead of the base
                        name of the script and the extension of the base
                        binary
  --no-copy-deps        do not copy the dependent files (extensions, shared
                        libraries, etc.) to the target directory; this also
                        modifies the default init script to ConsoleKeepPath.py
                        and means that the target executable requires a Python
                        installation to execute properly
  --default-path=DIRS   list of paths separated by the standard path separator
                        for the platform which will be used to initialize
                        sys.path prior to running the module finder
  --include-path=DIRS   list of paths separated by the standard path separator
                        for the platform which will be used to modify sys.path
                        prior to running the module finder
  --replace-paths=DIRECTIVES
                        replace all the paths in modules found in the given
                        paths with the given replacement string; multiple
                        values are separated by the standard path separator
                        and each value is of the form path=replacement_string;
                        path can be * which means all paths not already
                        specified
  --include-modules=NAMES
                        comma separated list of modules to include
  --exclude-modules=NAMES
                        comma separated list of modules to exclude
  --ext-list-file=NAME  name of file in which to place the list of dependent
                        files which were copied into the target directory
  -z SPEC, --zip-include=SPEC
                        name of file to add to the zip file or a specification
                        of the form name=arcname which will specify the
                        archive name to use; multiple --zip-include arguments
                        can be used
  --icon=ICON           name of the icon file for the application
